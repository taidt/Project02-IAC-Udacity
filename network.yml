Description: tutai92 - Project 02 - Deploy a high availability web app using CloudFormation - networking resources

Parameters:
  ProjectName:
    Type: String
    Description: Project name used for tagging resources

  VpcCIDR:
    Type: String
    Description: CIDR block for the VPC

  PublicSubnet1CIDR:
    Type: String
    Description: CIDR block for the first public subnet

  PublicSubnet2CIDR:
    Type: String
    Description: CIDR block for the second public subnet

  PrivateSubnet1CIDR:
    Type: String
    Description: CIDR block for the first private subnet

  PrivateSubnet2CIDR:
    Type: String
    Description: CIDR block for the second private subnet

Resources:
  # Add your resources here
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-VPC"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-InternetGateway"

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-PublicSubnet1"

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-PublicSubnet2"

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-PrivateSubnet1"

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-PrivateSubnet2"

  ApplicationUdagramEIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  ApplicationUdagramEIP2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  ApplicationUdagramNatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ApplicationUdagramEIP1.AllocationId
      SubnetId: !Ref PublicSubnet1

  ApplicationUdagramNatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ApplicationUdagramEIP2.AllocationId
      SubnetId: !Ref PublicSubnet2

  ApplicationUdagramPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  ApplicationUdagramPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref ApplicationUdagramPublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  ApplicationUdagramPublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref ApplicationUdagramPublicRouteTable

  ApplicationUdagramPublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref ApplicationUdagramPublicRouteTable

  ApplicationUdagramPrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  ApplicationUdagramPrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  ApplicationUdagramPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref ApplicationUdagramPrivateRouteTable1
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref ApplicationUdagramNatGateway1

  ApplicationUdagramPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref ApplicationUdagramPrivateRouteTable2
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref ApplicationUdagramNatGateway2

  ApplicationUdagramPrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref ApplicationUdagramPrivateRouteTable1

  ApplicationUdagramPrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref ApplicationUdagramPrivateRouteTable2

Outputs:
  VPC:
    Description: Udagram VPC
    Value: !Ref VPC
    Export:
      Name: !Sub "${ProjectName}-VPC"

  PublicSubnet1:
    Description: Public Subnet 1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "${ProjectName}-PublicSubnet1"

  PublicSubnet2:
    Description: Public Subnet 2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub "${ProjectName}-PublicSubnet2"

  PrivateSubnet1:
    Description: Private Subnet 1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${ProjectName}-PrivateSubnet1"

  PrivateSubnet2:
    Description: Private Subnet 2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub "${ProjectName}-PrivateSubnet2"
